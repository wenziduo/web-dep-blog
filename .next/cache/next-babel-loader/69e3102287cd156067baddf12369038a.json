{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport Main from '../../component/Main';\nimport { ListGroup, Image, Row, Col } from 'react-bootstrap';\nimport { fetchPostList } from '../../api';\n\nvar PostList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostList, _React$Component);\n\n  function PostList() {\n    _classCallCheck(this, PostList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostList).apply(this, arguments));\n  }\n\n  _createClass(PostList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$dataList = this.props.dataList,\n          dataList = _this$props$dataList === void 0 ? [] : _this$props$dataList;\n      return __jsx(\"div\", null, __jsx(Main, null, __jsx(ListGroup, {\n        variant: \"flush\"\n      }, dataList.map(function (item) {\n        return __jsx(ListGroup.Item, {\n          key: item._id\n        }, __jsx(Row, null, __jsx(Col, {\n          xs: 3\n        }, __jsx(Link, {\n          href: {\n            pathname: '/post/detail',\n            query: {\n              id: item._id\n            }\n          }\n        }, __jsx(Image, {\n          src: item.imgUrl,\n          thumbnail: true,\n          width: 200,\n          height: 200,\n          style: {\n            cursor: 'pointer'\n          }\n        }))), __jsx(Col, {\n          xs: 7\n        }, __jsx(\"h3\", null, __jsx(Link, {\n          href: {\n            pathname: '/post/detail',\n            query: {\n              id: item._id\n            }\n          }\n        }, __jsx(\"span\", {\n          style: {\n            color: '#09b597',\n            fontSize: 16,\n            fontWeight: 700,\n            cursor: 'pointer'\n          }\n        }, item.title))), __jsx(\"p\", {\n          style: {\n            minHeight: 40,\n            fontSize: 13\n          }\n        }, __jsx(Link, {\n          href: {\n            pathname: '/post/detail',\n            query: {\n              id: item._id\n            }\n          }\n        }, __jsx(\"span\", {\n          style: {\n            cursor: 'pointer'\n          }\n        }, item.text))), __jsx(\"p\", {\n          style: {\n            textAlign: 'right',\n            color: '#777'\n          }\n        }, __jsx(\"span\", null, moment(item.createTime).format('YYYY-MM-DD HH:mm')), __jsx(\"span\", {\n          style: {\n            marginLeft: 15\n          }\n        }, __jsx(\"i\", {\n          className: \"iconfont icon-eye\"\n        }), \"\\xA0\", item.watch)))));\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var _ref$ctx, pathname, query, res;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _ref$ctx = _ref.ctx, pathname = _ref$ctx.pathname, query = _ref$ctx.query;\n                _context.next = 3;\n                return fetchPostList({\n                  classifyId: query.classifyId\n                });\n\n              case 3:\n                res = _context.sent;\n                return _context.abrupt(\"return\", {\n                  dataList: res.data || []\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return PostList;\n}(React.Component);\n\nexport default PostList;","map":null,"metadata":{},"sourceType":"module"}
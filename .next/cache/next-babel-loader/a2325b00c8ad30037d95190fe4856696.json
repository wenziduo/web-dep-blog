{"ast":null,"code":"import \"antd/lib/notification/style/css\";\nimport _notification from \"antd/lib/notification\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nvar service = axios.create({\n  timeout: 5000\n}); //添加请求拦截器\n\nservice.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return _Promise.reject(error);\n}); //添加响应拦截器\n\nservice.interceptors.response.use(function (response) {\n  const res = response.data;\n\n  if (!res.success) {\n    _notification.error({\n      message: '错误提示',\n      description: res.message\n    });\n  }\n\n  console.log('response', response);\n  return res;\n}, function (error) {\n  _notification.error({\n    message: '错误提示',\n    description: '服务错误！'\n  });\n\n  return _Promise.reject(error);\n});\n\nfunction request({\n  method = 'get',\n  url,\n  data\n}) {\n  // 判断客户端还是服务端请求数据\n  const isServer = true;\n  const baseUrl = isServer ? 'http://127.0.0.1:8008' : '/api'; // 请求数据\n\n  if (method === 'get' || method === 'GET') {\n    return service({\n      method,\n      url: baseUrl + url,\n      params: data\n    });\n  }\n\n  if (method === 'post' || method === 'POST') {\n    return service({\n      method,\n      url: baseUrl + url,\n      data\n    });\n  }\n}\n\nexport default request;","map":null,"metadata":{},"sourceType":"module"}
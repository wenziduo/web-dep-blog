{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport AppMarkdown from '../../public/test.md';\nimport CodeBlock from '../CodeBlock';\nimport HeadingBlock from '../HeadingBlock';\nimport './index.less'; // import Aaa from 'react-markdown'\n// console.log('Aaa', Aaa)\n// See https://github.com/aknuds1/html-to-react#with-custom-processing-instructions\n// for more info on the processing instructions\n// const parseHtml = htmlParser({\n//   isValidNode: node => node.type !== 'script',\n//   processingInstructions: [\n//     /* ... */\n//   ]\n// })\n\nclass MarkdownComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isWindow: false\n    });\n\n    _defineProperty(this, \"loadComponent\", async () => {\n      const ReactMarkdown = await import('react-markdown');\n      const htmlParser = await import('react-markdown/plugins/html-parser');\n      this.ReactMarkdown = ReactMarkdown.default;\n      this.htmlParser = htmlParser.default;\n      this.setState({\n        isWindow: true\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadComponent();\n  }\n\n  render() {\n    const {\n      isWindow\n    } = this.state;\n    console.log('isWindow', isWindow);\n    const {\n      ReactMarkdown,\n      htmlParser\n    } = this;\n    console.log('ReactMarkdown', ReactMarkdown);\n    return __jsx(\"div\", {\n      className: \"markdown-layout-outer\"\n    }, isWindow && __jsx(ReactMarkdown, {\n      className: \"md-editor-markdown\",\n      source: this.props.dataSouce || null // source={AppMarkdown}\n      ,\n      escapeHtml: false,\n      renderers: {\n        code: CodeBlock,\n        heading: HeadingBlock\n      }\n    }));\n  }\n\n}\n\nexport default MarkdownComponent;","map":null,"metadata":{},"sourceType":"module"}